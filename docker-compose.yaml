services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./symfony:/var/www/project
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php-fpm
    networks:
      - symfony-network

  php-fpm:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
    volumes:
      - ./symfony:/var/www/project
    environment:
      - APP_ENV=dev
    depends_on:
      - db
    networks:
      - symfony-network

  php-cli:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
    volumes:
      - ./symfony:/var/www/project
    environment:
      - APP_ENV=dev
    user: "${UID:-1000}:${GID:-1000}"
    networks:
      - symfony-network
    entrypoint: ['/bin/sh', '-c']
    command: ['tail -f /dev/null'] # Comando que mantiene el contenedor corriendo

  db:
    image: mysql:8.0  # o mariadb:10.5
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword  # Cambia esto
      MYSQL_DATABASE: app_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password       # Cambia esto
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - symfony-network

  db_test:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_test
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - ./var/test_db:/var/lib/mysql
    networks:
      - symfony-network  

networks:
  symfony-network:
    driver: bridge

volumes:
  mysql_data:    